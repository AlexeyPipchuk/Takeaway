buildscript {
    apply from: "dependencies.gradle"
    apply from: "application.gradle"

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath classpaths.gradle
        classpath classpaths.kotlinGradlePlugin
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    if (project.name == "app") {
        apply plugin: "com.android.application"
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-kapt'
        apply plugin: 'kotlin-android-extensions'

        dependencies {
            implementation fileTree(dir: 'libs', include: ['*.jar'])
            implementation classpaths.kotlinStdLib
        }
    } else {
        apply plugin: "com.android.library"
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-android-extensions'

        android {
            compileSdkVersion application.maxApi
            buildToolsVersion application.tools

            defaultConfig {
                minSdkVersion application.minApi
                targetSdkVersion application.maxApi
                versionCode application.versionCode
                versionName application.versionName
                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                consumerProguardFiles 'consumer-rules.pro'
            }

            buildTypes {
                release {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
            }

            tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
                sourceCompatibility = JavaVersion.VERSION_1_8
                targetCompatibility = JavaVersion.VERSION_1_8

                kotlinOptions {
                    jvmTarget = '1.8'
                }
            }

            apply plugin: 'org.jetbrains.kotlin.android.extensions'
            androidExtensions {
                experimental = true
            }
        }

        dependencies {
            implementation fileTree(dir: 'libs', include: ['*.jar'])
            implementation classpaths.kotlinStdLib
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}